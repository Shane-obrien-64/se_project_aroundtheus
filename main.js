!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:i}=e;this._name=n,this._link=i,this._cardSelector=t,this._handleCardClick=s}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._likeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._deleteButton.addEventListener("click",(()=>this._handleDeleteCard())),this._cardImage.addEventListener("click",(()=>this._handleCardClick(this._name,this._link)))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_getElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getElement(),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__description"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._cardElement}}class t{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}toggleButtonState(){this._hasInvalidInput(this._inputEls)?this._disableButton():this._enableButton()}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupEl=document.querySelector(t),this._closeIcon=this._popupEl.querySelector(".modal__close"),this.close=this.close.bind(this)}open(){this._popupEl.classList.add("modal__opened"),this._popupEl.addEventListener("mousedown",this._closeOnOverlay),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupEl.classList.remove("modal__opened"),this._popupEl.removeEventListener("mousedown",this._closeOnOverlay),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_closeOnOverlay=e=>{e.target===e.currentTarget&&this.close()};setEventListeners(){this._closeIcon.addEventListener("click",this.close)}}class n extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupEl.querySelector(".modal__form"),this._handleFormSubmit=t,this._submitButton=this._popupForm.querySelector(".modal__save")}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e=[...this._popupForm.querySelectorAll(".modal__input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t)}))}}const i={inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=document.querySelector("#profile-add-button"),r=document.querySelector("#profile-edit-btn"),a=document.querySelector("#profile-edit-modal"),l=document.querySelector("#profile-add-modal"),c=a.querySelector("#profile-name-input"),u=a.querySelector("#profile-description-input"),d=new class{constructor(e,t){this._name=document.querySelector(e),this._description=document.querySelector(t)}getUserInfo(){return{name:this._name.textContent,description:this._description.textContent}}setUserInfo(e){let{name:t,description:s}=e;this._name.textContent=t,this._description.textContent=s}}("#profile-name","#profile-des");function p(e,t){m.open(e,t)}function _(t){return new e(t,"#card-template",p).getView()}const h=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}appendItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=_(e);h.appendItem(t)}},"#card-list");h.renderItems();const m=new class extends s{constructor(e){super({popupSelector:e}),this._popupEl=document.querySelector(e),this._popupImage=this._popupEl.querySelector(".modal__image"),this._popupTitle=this._popupEl.querySelector(".modal__image-description")}open(e,t){super.open(),this._popupImage.src=t,this._popupImage.alt=e,this._popupTitle.textContent=e}}("#preview-image-modal"),E=new n("#profile-edit-modal",(function(e){d.setUserInfo(e),E.close()})),v=new n("#profile-add-modal",(function(e){const t=_({name:e.title,link:e.imageUrl});h.prependItem(t),v.close()}));m.setEventListeners(),E.setEventListeners(),v.setEventListeners();const g=new t(i,a),S=new t(i,l);g.enableValidation(),S.enableValidation(),r.addEventListener("click",(()=>{const e=d.getUserInfo();c.value=e.name,u.value=e.description,E.open(),g.toggleButtonState()})),o.addEventListener("click",(()=>{v.open(),S.toggleButtonState()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,